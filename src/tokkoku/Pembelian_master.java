package tokkoku;

import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import javax.swing.JOptionPane;
import java.awt.event.KeyAdapter;
import java.awt.event.KeyEvent;
import javax.swing.JFrame;
import java.sql.*;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.table.DefaultTableModel;
import javax.swing.*;

public class Pembelian_master extends JFrame {
private int x = 210;
    
    public Pembelian_master() {
        initComponents();
        aturListener();
          btn_penjualan.setBackground(new java.awt.Color(255, 255, 255, 0));
          btn_dashboard.setBackground(new java.awt.Color(255, 255, 255, 0));
          btn_pemasok.setBackground(new java.awt.Color(255, 255, 255, 0));
          btn_pengembalian.setBackground(new java.awt.Color(255, 255, 255, 0));
          btn_stok.setBackground(new java.awt.Color(255, 255, 255, 0));
          btn_laporan.setBackground(new java.awt.Color(255, 255, 255, 0));
        
         isiharga.setBackground(new java.awt.Color(255, 255, 255, 0)); 
         isikodepemasok.setBackground(new java.awt.Color(255, 255, 255, 0)); 
         isikodeproduk.setBackground(new java.awt.Color(255, 255, 255, 0)); 
         isinamaproduk.setBackground(new java.awt.Color(255, 255, 255, 0)); 
         buttontambah.setBackground(new java.awt.Color(255, 255, 255, 0)); 
         buttonmasukan.setBackground(new java.awt.Color(255, 255, 255, 0)); 
         buttonhapus.setBackground(new java.awt.Color(255, 255, 255, 0)); 
         
         // Batasi spinner agar tidak bisa kurang dari 1
        SpinnerNumberModel model = new SpinnerNumberModel(1, 1, null, 1);
        spinjumlah.setModel(model);
    }

    private void aturListener() {
        isikodeproduk.addKeyListener(new KeyAdapter() {
            @Override
            public void keyReleased(KeyEvent evt) {
                isiNamaProdukOtomatis();
            }
        });
        isikodepemasok.addKeyListener(new KeyAdapter() {
        @Override
        public void keyReleased(KeyEvent evt) {
            isiNamaPemasokOtomatis();
        }
    });
    }

    private void isiNamaProdukOtomatis() {
        try {
            Connection conn = DriverManager.getConnection("jdbc:mysql://localhost:3306/db_kasirtoko", "root", "");
            String sql = "SELECT nama_produk FROM produk WHERE id_produk = ?";
            PreparedStatement ps = conn.prepareStatement(sql);
            ps.setString(1, isikodeproduk.getText());
            ResultSet rs = ps.executeQuery();

            if (rs.next()) {
                isinamaproduk.setText(rs.getString("nama_produk"));
            } else {
                isinamaproduk.setText(""); // Jika tidak ditemukan, kosongkan nama produk
            }

            rs.close();
            ps.close();
            conn.close();
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(this, "Terjadi kesalahan: " + e.getMessage());
        }
    }
private void isiNamaPemasokOtomatis() {
    try {
        Connection conn = DriverManager.getConnection("jdbc:mysql://localhost:3306/db_kasirtoko", "root", "");
        String sql = "SELECT nama FROM suplier WHERE id_pemasok = ?";
        PreparedStatement ps = conn.prepareStatement(sql);
        ps.setString(1, isikodepemasok.getText());
        ResultSet rs = ps.executeQuery();

        if (rs.next()) {
            // Kalau mau, kamu bisa isi ke textfield baru (contoh: isinamaPemasok)
            // Misal kamu buat JTextField baru buat nampilin nama_pemasok
            // isinamaPemasok.setText(rs.getString("nama_pemasok"));
            JOptionPane.showMessageDialog(this, "Pemasok ditemukan: " + rs.getString("nama"));
        } else {
            // isinamaPemasok.setText("");
            System.out.println("ID Pemasok tidak ditemukan.");
        }

        rs.close();
        ps.close();
        conn.close();
    } catch (SQLException e) {
        JOptionPane.showMessageDialog(this, "Terjadi kesalahan: " + e.getMessage());
    }
}
private void hapusBarisDariTabel() {
    int selectedRow = tabelpembelian.getSelectedRow();

    if (selectedRow != -1) {
        DefaultTableModel model = (DefaultTableModel) tabelpembelian.getModel();
        model.removeRow(selectedRow);
        JOptionPane.showMessageDialog(this, "Baris berhasil dihapus dari tabel.");
    } else {
        JOptionPane.showMessageDialog(this, "Pilih baris yang ingin dihapus terlebih dahulu.");
    }
}

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        sidebar = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        btn_penjualan = new javax.swing.JButton();
        btn_pemasok = new javax.swing.JButton();
        btn_pengembalian = new javax.swing.JButton();
        btn_stok = new javax.swing.JButton();
        btn_laporan = new javax.swing.JButton();
        btn_dashboard = new javax.swing.JButton();
        sidebarout = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        sidebarIn = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabelpembelian = new javax.swing.JTable();
        spinjumlah = new javax.swing.JSpinner();
        buttontambah = new javax.swing.JButton();
        buttonhapus = new javax.swing.JButton();
        buttonmasukan = new javax.swing.JButton();
        isiharga = new javax.swing.JTextField();
        isinamaproduk = new javax.swing.JTextField();
        isikodepemasok = new javax.swing.JTextField();
        isikodeproduk = new javax.swing.JTextField();
        tanggalkadaluwarsa = new de.wannawork.jcalendar.JCalendarComboBox();
        backgroundUtama = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        sidebar.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/asset/hamburger.png"))); // NOI18N
        jLabel2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel2MouseClicked(evt);
            }
        });
        sidebar.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 140, 70, 70));

        btn_penjualan.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btn_penjualanMouseClicked(evt);
            }
        });
        btn_penjualan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_penjualanActionPerformed(evt);
            }
        });
        sidebar.add(btn_penjualan, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 240, 240, 50));

        btn_pemasok.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btn_pemasokMouseClicked(evt);
            }
        });
        sidebar.add(btn_pemasok, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 450, 240, 50));

        btn_pengembalian.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btn_pengembalianMouseClicked(evt);
            }
        });
        sidebar.add(btn_pengembalian, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 520, 240, 50));

        btn_stok.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btn_stokMouseClicked(evt);
            }
        });
        btn_stok.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_stokActionPerformed(evt);
            }
        });
        sidebar.add(btn_stok, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 600, 240, 50));

        btn_laporan.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btn_laporanMouseClicked(evt);
            }
        });
        btn_laporan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_laporanActionPerformed(evt);
            }
        });
        sidebar.add(btn_laporan, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 670, 240, 50));

        btn_dashboard.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btn_dashboardMouseClicked(evt);
            }
        });
        btn_dashboard.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_dashboardActionPerformed(evt);
            }
        });
        sidebar.add(btn_dashboard, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 305, 240, 50));

        sidebarout.setIcon(new javax.swing.ImageIcon(getClass().getResource("/asset/side-bar-out/sidebar-out-pembelian.png"))); // NOI18N
        sidebar.add(sidebarout, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 250, -1));

        jPanel1.add(sidebar, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 240, 750));

        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/asset/hamburger.png"))); // NOI18N
        jLabel3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel3MouseClicked(evt);
            }
        });
        jPanel1.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 140, 160, 70));

        sidebarIn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/asset/side-bar-in/sidebar-in-pembelian.png"))); // NOI18N
        jPanel1.add(sidebarIn, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        jScrollPane1.setBackground(new java.awt.Color(255, 255, 255));

        tabelpembelian.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "id_pemasok", "id produk", "nama_produk", "tanggal_kelauwarsa", "jumlah", "total"
            }
        ));
        jScrollPane1.setViewportView(tabelpembelian);

        jPanel1.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 50, 1190, 270));
        jPanel1.add(spinjumlah, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 570, 110, -1));

        buttontambah.setBorder(null);
        buttontambah.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttontambahActionPerformed(evt);
            }
        });
        jPanel1.add(buttontambah, new org.netbeans.lib.awtextra.AbsoluteConstraints(850, 570, 180, 60));

        buttonhapus.setBorder(null);
        buttonhapus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonhapusActionPerformed(evt);
            }
        });
        jPanel1.add(buttonhapus, new org.netbeans.lib.awtextra.AbsoluteConstraints(1040, 580, 150, 50));

        buttonmasukan.setBorder(null);
        buttonmasukan.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                buttonmasukanMouseClicked(evt);
            }
        });
        buttonmasukan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonmasukanActionPerformed(evt);
            }
        });
        jPanel1.add(buttonmasukan, new org.netbeans.lib.awtextra.AbsoluteConstraints(1200, 360, 220, 70));

        isiharga.setBorder(null);
        jPanel1.add(isiharga, new org.netbeans.lib.awtextra.AbsoluteConstraints(940, 370, 150, 40));

        isinamaproduk.setBorder(null);
        isinamaproduk.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                isinamaprodukActionPerformed(evt);
            }
        });
        jPanel1.add(isinamaproduk, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 500, 210, 30));

        isikodepemasok.setBorder(null);
        isikodepemasok.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                isikodepemasokActionPerformed(evt);
            }
        });
        jPanel1.add(isikodepemasok, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 370, 120, 40));

        isikodeproduk.setBorder(null);
        isikodeproduk.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                isikodeprodukActionPerformed(evt);
            }
        });
        jPanel1.add(isikodeproduk, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 440, 120, 40));
        jPanel1.add(tanggalkadaluwarsa, new org.netbeans.lib.awtextra.AbsoluteConstraints(900, 500, -1, -1));

        backgroundUtama.setIcon(new javax.swing.ImageIcon(getClass().getResource("/asset/Pembelian.png"))); // NOI18N
        jPanel1.add(backgroundUtama, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 0, 1440, 750));

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1440, 750));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void isikodepemasokActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_isikodepemasokActionPerformed
        // TODO add your handling code here:                                            
    }//GEN-LAST:event_isikodepemasokActionPerformed

    private void buttonmasukanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonmasukanActionPerformed
        // TODO add your handling code here:                                           
 try {
    int idPengguna = LoginSession.getInstance().getIdPengguna();
    if (idPengguna <= 0) {
        JOptionPane.showMessageDialog(this, "Pengguna tidak valid. Silakan login kembali.");
        return;
    }

    Connection conn = DriverManager.getConnection("jdbc:mysql://localhost:3306/db_kasirtoko", "root", "");
    conn.setAutoCommit(false); // Transaksi manual

    DefaultTableModel model = (DefaultTableModel) tabelpembelian.getModel();
    int rowCount = model.getRowCount();

    if (rowCount == 0) {
        JOptionPane.showMessageDialog(this, "Belum ada data yang dimasukkan ke tabel!");
        return;
    }

    Object val = model.getValueAt(0, 0);
    if (val == null || val.toString().trim().isEmpty()) {
        JOptionPane.showMessageDialog(this, "ID Pemasok tidak boleh kosong!");
        return;
    }

    int idPemasok = Integer.parseInt(val.toString().trim());

    // Insert ke pembelian
    String sqlPembelian = "INSERT INTO pembelian (id_pemasok, total, tanggal_pembelian, id_pengguna) VALUES (?, ?, ?, ?)";
    PreparedStatement pstPembelian = conn.prepareStatement(sqlPembelian, Statement.RETURN_GENERATED_KEYS);
    pstPembelian.setInt(1, idPemasok);
    pstPembelian.setDouble(2, 0); // akan diupdate nanti
    pstPembelian.setTimestamp(3, new java.sql.Timestamp(System.currentTimeMillis()));
    pstPembelian.setInt(4, idPengguna);
    pstPembelian.executeUpdate();

    ResultSet rsPembelian = pstPembelian.getGeneratedKeys();
    int idPembelian = 0;
    if (rsPembelian.next()) {
        idPembelian = rsPembelian.getInt(1);
    }
    rsPembelian.close();
    pstPembelian.close();

    double totalHargaSemua = 0;

    for (int i = 0; i < rowCount; i++) {
        Object valIdProduk = model.getValueAt(i, 1);
        Object valNamaProduk = model.getValueAt(i, 2);
        Object valTanggalKedaluwarsa = model.getValueAt(i, 3);
        Object valJumlah = model.getValueAt(i, 4);
        Object valSubtotal = model.getValueAt(i, 5);

        if (valIdProduk == null || valTanggalKedaluwarsa == null || valJumlah == null || valSubtotal == null) {
            JOptionPane.showMessageDialog(this, "Data pada baris ke-" + (i + 1) + " tidak boleh kosong.");
            conn.rollback();
            return;
        }

        String idProduk = valIdProduk.toString();
        String namaProduk = (valNamaProduk != null) ? valNamaProduk.toString() : "";
        String tanggalKedaluwarsa = valTanggalKedaluwarsa.toString();
        int jumlah = Integer.parseInt(valJumlah.toString());
        double subtotal = Double.parseDouble(valSubtotal.toString());

        double hargaSatuan = subtotal / jumlah;
        double hargaJual = hargaSatuan * 1.2;
        totalHargaSemua += subtotal;

        int idStok;

        // Cek stok_produk: apakah sudah ada data yang sama
        String sqlCekStok = "SELECT id_stok FROM stok_produk WHERE id_produk = ? AND harga_beli = ? AND harga_jual = ? AND tanggal_kedaluwarsa = ?";
        PreparedStatement pstCek = conn.prepareStatement(sqlCekStok);
        pstCek.setString(1, idProduk);
        pstCek.setDouble(2, hargaSatuan);
        pstCek.setDouble(3, hargaJual);
        pstCek.setDate(4, java.sql.Date.valueOf(tanggalKedaluwarsa));

        ResultSet rsCek = pstCek.executeQuery();

        if (rsCek.next()) {
            // Sudah ada stok dengan detail sama → tambahkan stok
            idStok = rsCek.getInt("id_stok");
            rsCek.close();
            pstCek.close();

            String sqlUpdateStok = "UPDATE stok_produk SET stok = stok + ? WHERE id_stok = ?";
            PreparedStatement pstUpdateStok = conn.prepareStatement(sqlUpdateStok);
            pstUpdateStok.setInt(1, jumlah);
            pstUpdateStok.setInt(2, idStok);
            pstUpdateStok.executeUpdate();
            pstUpdateStok.close();

        } else {
            // Belum ada → insert stok baru
            rsCek.close();
            pstCek.close();

            String sqlInsertStok = "INSERT INTO stok_produk (id_produk, stok, harga_beli, harga_jual, tanggal_kedaluwarsa, id_pembelian) VALUES (?, ?, ?, ?, ?, ?)";
            PreparedStatement pstInsertStok = conn.prepareStatement(sqlInsertStok, Statement.RETURN_GENERATED_KEYS);
            pstInsertStok.setString(1, idProduk);
            pstInsertStok.setInt(2, jumlah);
            pstInsertStok.setDouble(3, hargaSatuan);
            pstInsertStok.setDouble(4, hargaJual);
            pstInsertStok.setDate(5, java.sql.Date.valueOf(tanggalKedaluwarsa));
            pstInsertStok.setInt(6, idPembelian);
            pstInsertStok.executeUpdate();

            ResultSet rsStok = pstInsertStok.getGeneratedKeys();
            if (rsStok.next()) {
                idStok = rsStok.getInt(1);
            } else {
                conn.rollback();
                JOptionPane.showMessageDialog(this, "Gagal mengambil ID stok baru.");
                return;
            }

            rsStok.close();
            pstInsertStok.close();
        }

        // Insert ke detail_pembelian
        String sqlDetail = "INSERT INTO detail_pembelian (id_pembelian, id_produk, id_stok, jumlah, subtotal, harga_beli, tanggal_kedaluwarsa) VALUES (?, ?, ?, ?, ?, ?, ?)";
        PreparedStatement pstDetail = conn.prepareStatement(sqlDetail);
        pstDetail.setInt(1, idPembelian);
        pstDetail.setString(2, idProduk);
        pstDetail.setInt(3, idStok);
        pstDetail.setInt(4, jumlah);
        pstDetail.setDouble(5, subtotal);
        pstDetail.setDouble(6, hargaSatuan);
        pstDetail.setDate(7, java.sql.Date.valueOf(tanggalKedaluwarsa));
        pstDetail.executeUpdate();
        pstDetail.close();
    }

    // Update total di pembelian
    
    String sqlUpdate = "UPDATE pembelian SET total = ? WHERE id_pembelian = ?";
    PreparedStatement pstUpdate = conn.prepareStatement(sqlUpdate);
    pstUpdate.setDouble(1, totalHargaSemua);
    pstUpdate.setInt(2, idPembelian);
    pstUpdate.executeUpdate();
    pstUpdate.close();

    conn.commit();
    conn.close();

    JOptionPane.showMessageDialog(this, "Data berhasil disimpan!");
    model.setRowCount(0); // Clear tabel

} catch (Exception e) {
    e.printStackTrace();
    JOptionPane.showMessageDialog(this, "Terjadi kesalahan: " + e.getMessage());
}
    }//GEN-LAST:event_buttonmasukanActionPerformed

    private void isikodeprodukActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_isikodeprodukActionPerformed
        // TODO add your handling code here:                                           
    try {
    // Koneksi ke database
    Connection conn = DriverManager.getConnection("jdbc:mysql://localhost:3306/db_kasirtoko", "root", "");
    
    // Query buat ambil nama produk berdasarkan kode produk
    String sql = "SELECT nama_produk FROM produk WHERE id_produk = ?";
    PreparedStatement ps = conn.prepareStatement(sql);
    
    String kodeProduk = isikodeproduk.getText(); // ambil dari TextField kode produk
    ps.setString(1, kodeProduk);
    ResultSet rs = ps.executeQuery();

    if (rs.next()) {
        // Kalau ketemu, isi TextField nama produk
        String namaProduk = rs.getString("nama_produk");
        isinamaproduk.setText(namaProduk);
        System.out.println("Produk ditemukan: " + namaProduk);
        JOptionPane.showMessageDialog(this, "Produk ditemukan: " + namaProduk);
    } else {
        // Kalau tidak ketemu
        isinamaproduk.setText(""); // kosongkan field nama produk
        System.out.println("Kode produk dan nama produk tidak ditemukan.");
        JOptionPane.showMessageDialog(this, "Kode produk dan nama produk tidak ditemukan.");
    }

    // Tutup koneksi
    rs.close();
    ps.close();
    conn.close();
} catch (SQLException e) {
    JOptionPane.showMessageDialog(this, "Terjadi kesalahan: " + e.getMessage());
}


    }//GEN-LAST:event_isikodeprodukActionPerformed

    private void buttontambahActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttontambahActionPerformed
        // TODO add your handling code here:
 // Ambil nilai input
String idPemasok = isikodepemasok.getText().trim();
String idProduk = isikodeproduk.getText().trim();
String namaProduk = isinamaproduk.getText().trim();
String hargaString = isiharga.getText().trim();
int jumlah = (int) spinjumlah.getValue();

String tanggalKadaluarsa = "";
if (tanggalkadaluwarsa.getDate() != null) {
    java.text.SimpleDateFormat sdf = new java.text.SimpleDateFormat("yyyy-MM-dd");
    tanggalKadaluarsa = sdf.format(tanggalkadaluwarsa.getDate());
}

// Validasi input
if (idPemasok.isEmpty() || idProduk.isEmpty() || namaProduk.isEmpty() || 
    hargaString.isEmpty() || tanggalKadaluarsa.isEmpty() || jumlah <= 0) {
    JOptionPane.showMessageDialog(this, "Lengkapi semua data dulu ya cantik!");
    return;
}

int harga;
try {
    harga = Integer.parseInt(hargaString);
} catch (NumberFormatException e) {
    JOptionPane.showMessageDialog(this, "Harga harus berupa angka yaa!");
    return;
}

int totalItem = harga * jumlah;

// Masukkan data ke baris paling atas tabel
javax.swing.table.DefaultTableModel model = (javax.swing.table.DefaultTableModel) tabelpembelian.getModel();
model.insertRow(0, new Object[]{
    idPemasok,
    idProduk,
    namaProduk,
    tanggalKadaluarsa,
    jumlah,
    totalItem
});

// Bersihkan input
isikodepemasok.setText("");
isikodeproduk.setText("");
isinamaproduk.setText("");
isiharga.setText("");
spinjumlah.setValue(1);
tanggalkadaluwarsa.setDate(null);

// Update total harga semua
int totalHargaSemua = 0;
for (int i = 0; i < model.getRowCount(); i++) {
    Object value = model.getValueAt(i, 5); // Kolom ke-5 adalah "total"
    if (value != null) {
        totalHargaSemua += Integer.parseInt(value.toString());
    }
}

// Kalau ingin tampilkan di label
// labelTotalHarga.setText("Total Harga: Rp " + totalHargaSemua);

System.out.println("Total Harga Semua: Rp " + totalHargaSemua);


    }//GEN-LAST:event_buttontambahActionPerformed

    private void buttonmasukanMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_buttonmasukanMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_buttonmasukanMouseClicked

    private void buttonhapusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonhapusActionPerformed
        // TODO add your handling code here:
        hapusBarisDariTabel();

    }//GEN-LAST:event_buttonhapusActionPerformed

    private void isinamaprodukActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_isinamaprodukActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_isinamaprodukActionPerformed

    private void jLabel2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel2MouseClicked
        // TODO add your handling code here:
        if (x == 210) {
            Timer timer = new Timer(5, new ActionListener() {
                int width = 240;
                @Override
                public void actionPerformed(ActionEvent e) {
                    if (width <= 0) { // Sidebar tetap menyisakan 50px
                        ((Timer) e.getSource()).stop();
                        x = 0;

                    } else {
                        width -= 10;
                        sidebar.setSize(width, 780);
                        //                sidebar.setBorder(BorderFactory.createLineBorder(Color.BLACK, 2, true)); // Border melengkung
                    }
                }
            });
            timer.start();
        }
    }//GEN-LAST:event_jLabel2MouseClicked

    private void btn_pengembalianMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btn_pengembalianMouseClicked
        // TODO add your handling code here:
        System.out.println("Sekarang Dalam Page Pengembalian Barang " + "Master");
    }//GEN-LAST:event_btn_pengembalianMouseClicked

    private void btn_stokActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_stokActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btn_stokActionPerformed

    private void btn_laporanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_laporanActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btn_laporanActionPerformed

    private void jLabel3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel3MouseClicked
        // TODO add your handling code here:
        if (x == 0) { // Cek apakah sidebar dalam keadaan tertutup
            new Thread(() -> {
                try {
                    for (int i = 0; i <= 240; i += 10) { // Tambah ukuran per 10 biar smooth
                        Thread.sleep(5); // Delay biar animasi ga terlalu cepat
                        sidebar.setSize(i, 780);
                    }
                } catch (Exception e) {
                    JOptionPane.showMessageDialog(null, "Error: " + e.getMessage());
                }
            }).start();

            x = 210; // Ubah x ke 210 biar nanti bisa ditutup lagi
        }
    }//GEN-LAST:event_jLabel3MouseClicked

    private void btn_penjualanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_penjualanActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btn_penjualanActionPerformed

    private void btn_penjualanMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btn_penjualanMouseClicked
        Dashboard_master dashboard = new Dashboard_master();
        dashboard.setExtendedState(JFrame.MAXIMIZED_BOTH);
        dashboard.setVisible(true);
        dispose();
        System.out.println("Sekarang Dalam Page Dashboard " + "Master");
    }//GEN-LAST:event_btn_penjualanMouseClicked

    private void btn_pemasokMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btn_pemasokMouseClicked
        // TODO add your handling code here:
        Pemasok_master pemasok = new Pemasok_master();
        pemasok.setExtendedState(JFrame.MAXIMIZED_BOTH);
        pemasok.setVisible(true);
        dispose();
        System.out.println("Sekarang Dalam Page Pemasok " + "Master");
    }//GEN-LAST:event_btn_pemasokMouseClicked

    private void btn_dashboardMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btn_dashboardMouseClicked
    try {
        // TODO add your handling code here:
        Penjualan_master penjualan = new Penjualan_master();
        penjualan.setExtendedState(JFrame.MAXIMIZED_BOTH);
        penjualan.setVisible(true);
        dispose();
        System.out.println("Sekarang Dalam Page Penjualan " + "Master");
    } catch (SQLException ex) {
        Logger.getLogger(Pembelian_master.class.getName()).log(Level.SEVERE, null, ex);
    }
    }//GEN-LAST:event_btn_dashboardMouseClicked

    private void btn_dashboardActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_dashboardActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btn_dashboardActionPerformed

    private void btn_stokMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btn_stokMouseClicked
        // TODO add your handling code here:
        System.out.println("Sekarang Dalam Page Stok " + "Master");
    }//GEN-LAST:event_btn_stokMouseClicked

    private void btn_laporanMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btn_laporanMouseClicked
        // TODO add your handling code here:
        System.out.println("Sekarang Dalam Page Laporan " + "Master");
    }//GEN-LAST:event_btn_laporanMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Pembelian_master.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Pembelian_master.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Pembelian_master.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Pembelian_master.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Pembelian_master().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel backgroundUtama;
    private javax.swing.JButton btn_dashboard;
    private javax.swing.JButton btn_laporan;
    private javax.swing.JButton btn_pemasok;
    private javax.swing.JButton btn_pengembalian;
    private javax.swing.JButton btn_penjualan;
    private javax.swing.JButton btn_stok;
    private javax.swing.JButton buttonhapus;
    private javax.swing.JButton buttonmasukan;
    private javax.swing.JButton buttontambah;
    private javax.swing.JTextField isiharga;
    private javax.swing.JTextField isikodepemasok;
    private javax.swing.JTextField isikodeproduk;
    private javax.swing.JTextField isinamaproduk;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JPanel sidebar;
    private javax.swing.JLabel sidebarIn;
    private javax.swing.JLabel sidebarout;
    private javax.swing.JSpinner spinjumlah;
    private javax.swing.JTable tabelpembelian;
    private de.wannawork.jcalendar.JCalendarComboBox tanggalkadaluwarsa;
    // End of variables declaration//GEN-END:variables
}
