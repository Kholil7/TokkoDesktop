package tokkoku;

import com.google.zxing.BarcodeFormat;
import com.google.zxing.MultiFormatWriter;
import com.google.zxing.common.BitMatrix;
import database.dbtokko;
import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Font;
import java.awt.FontMetrics;
import java.awt.Graphics2D;
import java.awt.Image;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseMotionAdapter;
import java.awt.image.BufferedImage;
import java.awt.print.Printable;
import java.awt.print.PrinterJob;
import java.io.File;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.SpinnerNumberModel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author NINDY
 */
public class Menambah_Stok1 extends javax.swing.JFrame {
        
    private String selectedIdProduk;

    public Menambah_Stok1() {
        initComponents();
        pnTambah.setVisible(false);
        pnUbah.setVisible(false);
        pnTambahBarcode.setVisible(false);
        pnTambahBarcode.addMouseListener(new MouseAdapter() {});
        pnTambahBarcode.addMouseMotionListener(new MouseMotionAdapter() {});
        pnTambah.addMouseListener(new MouseAdapter() {});
        pnTambah.addMouseMotionListener(new MouseMotionAdapter() {});
        pnl_barangrusak.setVisible(false);
        pnl_barangrusak.addMouseListener(new MouseAdapter() {});
        pnl_barangrusak.addMouseMotionListener(new MouseMotionAdapter() {});
        pnlRusak.setVisible(false);
        pnlRusak.addMouseListener(new MouseAdapter() {});
        pnlRusak.addMouseMotionListener(new MouseMotionAdapter() {});
        tblData.addMouseListener(new MouseAdapter() {});
        tblData.addMouseMotionListener(new MouseMotionAdapter() {});
        JTable tblStokProduk = new JTable(); // atau sudah ada di form/desain GUI
        SpinnerNumberModel model = new SpinnerNumberModel(1, 0, 9999, 1);
        SpnJumlah.setModel(model);
        loadDataProduk(); 
        
        
        

btnBarangRusak.addActionListener(new ActionListener() {
    @Override
    public void actionPerformed(ActionEvent e) {
        int selectedRow = tblData.getSelectedRow();
        if (selectedRow == -1) {
            JOptionPane.showMessageDialog(null, "Silakan pilih salah satu item dari tabel produk.");
            return;
        }

        try {
            String idProduk = tblData.getValueAt(selectedRow, 0).toString();
            tampilkanStokProduk(idProduk);
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, "Gagal membaca ID produk: " + ex.getMessage());
        }
    }
});


btn_rusak.addActionListener(new ActionListener() {
    @Override
    public void actionPerformed(ActionEvent e) {
        int selectedRow = dataStok.getSelectedRow();
        if (selectedRow == -1) {
            JOptionPane.showMessageDialog(null, "Pilih item dari tabel stok terlebih dahulu.");
            return;
        }

        try {
            // Ambil ID Produk dari baris yang dipilih
            String idProduk = dataStok.getValueAt(selectedRow, 0).toString();

            // Tampilkan panel input rusak
            pnlRusak.setVisible(true);     // pastikan pnlRusak sudah disiapkan sebelumnya
            pnlRusak.setEnabled(true);

            // Masukkan nilai ID produk ke dalam textfield
            jtId.setText(idProduk);
            jtId.setEditable(false); // supaya tidak bisa diubah user

        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, "Gagal memproses: " + ex.getMessage());
        }
    }
});



    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pnl_barangrusak = new javax.swing.JPanel();
        pnlRusak = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jtId = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        SpnJumlah = new javax.swing.JSpinner();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        btnMasuk = new javax.swing.JButton();
        btnKembali = new javax.swing.JButton();
        jtAlasan = new javax.swing.JComboBox<>();
        jCalenderMasok = new de.wannawork.jcalendar.JCalendarComboBox();
        jScrollPane2 = new javax.swing.JScrollPane();
        dataStok = new javax.swing.JTable();
        btn_rusak = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        pnTambahBarcode = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        showPanelBarcode = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        outputBarcode = new javax.swing.JTextField();
        generateButton = new javax.swing.JButton();
        btn_cetak = new javax.swing.JButton();
        btnBatal2 = new javax.swing.JButton();
        btn_simpanBarcode = new javax.swing.JButton();
        btnTambah = new javax.swing.JButton();
        btnUbah = new javax.swing.JButton();
        btnBarcode = new javax.swing.JButton();
        btnBarangRusak = new javax.swing.JButton();
        btnHapus = new javax.swing.JButton();
        pnUbah = new javax.swing.JPanel();
        txtNamaproduk1 = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        btnBatal1 = new javax.swing.JButton();
        btnSimpan2 = new javax.swing.JButton();
        pnTambah = new javax.swing.JPanel();
        txtNamaproduk = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        btnBatal = new javax.swing.JButton();
        btnSimpan1 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblData = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        pnl_barangrusak.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        pnlRusak.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel6.setText("ID Produk");
        pnlRusak.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 150, -1, -1));

        jLabel7.setText("Jumlah");
        pnlRusak.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 290, 60, -1));

        jtId.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtIdActionPerformed(evt);
            }
        });
        pnlRusak.add(jtId, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 150, -1, -1));

        jLabel8.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jLabel8.setText("Barang Rusak");
        pnlRusak.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 0, 150, 60));
        pnlRusak.add(SpnJumlah, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 280, 82, 33));

        jLabel9.setText("Tanggal Rusak");
        pnlRusak.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 240, -1, -1));

        jLabel10.setText("Alasan");
        pnlRusak.add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 190, -1, -1));

        btnMasuk.setText("Masukkan");
        btnMasuk.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnMasukMouseClicked(evt);
            }
        });
        pnlRusak.add(btnMasuk, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 373, -1, 30));

        btnKembali.setText("Kembali");
        btnKembali.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnKembaliMouseClicked(evt);
            }
        });
        pnlRusak.add(btnKembali, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 10, -1, -1));

        jtAlasan.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Rusak", "Kadaluarsa" }));
        pnlRusak.add(jtAlasan, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 190, -1, -1));
        pnlRusak.add(jCalenderMasok, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 240, -1, -1));

        pnl_barangrusak.add(pnlRusak, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 10, 440, 480));

        dataStok.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "ID Produk", "ID Stok", "Stok", "Harga Beli", "Harga Jual", "Kadaluarsa"
            }
        ));
        jScrollPane2.setViewportView(dataStok);

        pnl_barangrusak.add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(106, 78, 734, 470));

        btn_rusak.setText("Barang Rusak");
        btn_rusak.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_rusakActionPerformed(evt);
            }
        });
        pnl_barangrusak.add(btn_rusak, new org.netbeans.lib.awtextra.AbsoluteConstraints(690, 18, 132, 42));

        jButton3.setText("Kembali");
        jButton3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton3MouseClicked(evt);
            }
        });
        pnl_barangrusak.add(jButton3, new org.netbeans.lib.awtextra.AbsoluteConstraints(29, 27, -1, -1));

        getContentPane().add(pnl_barangrusak, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 120, 840, 570));

        pnTambahBarcode.setBackground(new java.awt.Color(51, 51, 255));
        pnTambahBarcode.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 783, Short.MAX_VALUE)
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        pnTambahBarcode.add(jPanel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 458, 783, -1));

        jLabel2.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        jLabel2.setText("Generate Barcode");
        pnTambahBarcode.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(14, 0, 135, -1));

        javax.swing.GroupLayout showPanelBarcodeLayout = new javax.swing.GroupLayout(showPanelBarcode);
        showPanelBarcode.setLayout(showPanelBarcodeLayout);
        showPanelBarcodeLayout.setHorizontalGroup(
            showPanelBarcodeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 350, Short.MAX_VALUE)
        );
        showPanelBarcodeLayout.setVerticalGroup(
            showPanelBarcodeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        pnTambahBarcode.add(showPanelBarcode, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 150, 350, 100));

        jLabel5.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N
        jLabel5.setText("Barcode");
        pnTambahBarcode.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(46, 84, 69, -1));

        outputBarcode.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                outputBarcodeActionPerformed(evt);
            }
        });
        pnTambahBarcode.add(outputBarcode, new org.netbeans.lib.awtextra.AbsoluteConstraints(46, 109, 240, 32));

        generateButton.setText("Generate");
        generateButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                generateButtonMouseClicked(evt);
            }
        });
        generateButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                generateButtonActionPerformed(evt);
            }
        });
        pnTambahBarcode.add(generateButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 110, 93, 32));

        btn_cetak.setText("Cetak");
        btn_cetak.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btn_cetakMouseClicked(evt);
            }
        });
        btn_cetak.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_cetakActionPerformed(evt);
            }
        });
        pnTambahBarcode.add(btn_cetak, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 270, 93, 32));

        btnBatal2.setText("Batal");
        btnBatal2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBatal2ActionPerformed(evt);
            }
        });
        pnTambahBarcode.add(btnBatal2, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 270, 112, 30));

        btn_simpanBarcode.setText("Simpan");
        btn_simpanBarcode.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btn_simpanBarcodeMouseClicked(evt);
            }
        });
        btn_simpanBarcode.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_simpanBarcodeActionPerformed(evt);
            }
        });
        pnTambahBarcode.add(btn_simpanBarcode, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 270, 100, 30));

        getContentPane().add(pnTambahBarcode, new org.netbeans.lib.awtextra.AbsoluteConstraints(520, 160, 430, -1));

        btnTambah.setContentAreaFilled(false);
        btnTambah.setBorderPainted(false);
        btnTambah.setBorder(null);
        btnTambah.setBorderPainted(false);
        btnTambah.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTambahActionPerformed(evt);
            }
        });
        getContentPane().add(btnTambah, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 50, 210, 50));

        btnUbah.setContentAreaFilled(false);
        btnUbah.setBorderPainted(false);
        btnUbah.setBorder(null);
        btnUbah.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUbahActionPerformed(evt);
            }
        });
        getContentPane().add(btnUbah, new org.netbeans.lib.awtextra.AbsoluteConstraints(520, 50, 100, 60));

        btnBarcode.setContentAreaFilled(false);
        btnBarcode.setBorderPainted(false);
        btnBarcode.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBarcodeActionPerformed(evt);
            }
        });
        getContentPane().add(btnBarcode, new org.netbeans.lib.awtextra.AbsoluteConstraints(1050, 50, 140, 50));

        btnBarangRusak.setContentAreaFilled(false);
        btnBarangRusak.setBorderPainted(false);
        btnBarangRusak.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnBarangRusakMouseClicked(evt);
            }
        });
        btnBarangRusak.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBarangRusakActionPerformed(evt);
            }
        });
        getContentPane().add(btnBarangRusak, new org.netbeans.lib.awtextra.AbsoluteConstraints(800, 50, 210, 50));

        btnHapus.setContentAreaFilled(false);
        btnHapus.setBorderPainted(false);
        btnHapus.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnHapusMouseClicked(evt);
            }
        });
        btnHapus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnHapusActionPerformed(evt);
            }
        });
        getContentPane().add(btnHapus, new org.netbeans.lib.awtextra.AbsoluteConstraints(655, 50, 110, 50));

        pnUbah.setBackground(new java.awt.Color(51, 51, 255));
        pnUbah.addAncestorListener(new javax.swing.event.AncestorListener() {
            public void ancestorAdded(javax.swing.event.AncestorEvent evt) {
                pnUbahAncestorAdded(evt);
            }
            public void ancestorMoved(javax.swing.event.AncestorEvent evt) {
            }
            public void ancestorRemoved(javax.swing.event.AncestorEvent evt) {
            }
        });
        pnUbah.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        txtNamaproduk1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNamaproduk1ActionPerformed(evt);
            }
        });
        pnUbah.add(txtNamaproduk1, new org.netbeans.lib.awtextra.AbsoluteConstraints(161, 21, 206, 32));

        jLabel4.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel4.setText("Nama Produk :");
        pnUbah.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(32, 26, 111, -1));

        btnBatal1.setText("Batal");
        btnBatal1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBatal1ActionPerformed(evt);
            }
        });
        pnUbah.add(btnBatal1, new org.netbeans.lib.awtextra.AbsoluteConstraints(88, 179, 112, 42));

        btnSimpan2.setText("Simpan");
        btnSimpan2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSimpan2ActionPerformed(evt);
            }
        });
        pnUbah.add(btnSimpan2, new org.netbeans.lib.awtextra.AbsoluteConstraints(255, 179, 112, 42));

        getContentPane().add(pnUbah, new org.netbeans.lib.awtextra.AbsoluteConstraints(520, 170, 400, 270));

        pnTambah.setBackground(new java.awt.Color(51, 51, 255));
        pnTambah.addAncestorListener(new javax.swing.event.AncestorListener() {
            public void ancestorAdded(javax.swing.event.AncestorEvent evt) {
                pnTambahAncestorAdded(evt);
            }
            public void ancestorMoved(javax.swing.event.AncestorEvent evt) {
            }
            public void ancestorRemoved(javax.swing.event.AncestorEvent evt) {
            }
        });
        pnTambah.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        txtNamaproduk.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNamaprodukActionPerformed(evt);
            }
        });
        pnTambah.add(txtNamaproduk, new org.netbeans.lib.awtextra.AbsoluteConstraints(161, 21, 206, 32));

        jLabel3.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel3.setText("Nama Produk :");
        pnTambah.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(32, 26, 111, -1));

        btnBatal.setText("Batal");
        btnBatal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBatalActionPerformed(evt);
            }
        });
        pnTambah.add(btnBatal, new org.netbeans.lib.awtextra.AbsoluteConstraints(88, 179, 112, 42));

        btnSimpan1.setText("Simpan");
        btnSimpan1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnSimpan1MouseClicked(evt);
            }
        });
        btnSimpan1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSimpan1ActionPerformed(evt);
            }
        });
        pnTambah.add(btnSimpan1, new org.netbeans.lib.awtextra.AbsoluteConstraints(255, 179, 112, 42));

        getContentPane().add(pnTambah, new org.netbeans.lib.awtextra.AbsoluteConstraints(520, 170, 400, 270));

        tblData.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Kode Barang", "Nama Barang", "Barcode", "Stok"
            }
        ));
        jScrollPane1.setViewportView(tblData);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 120, 1120, 570));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/asset/Stok.png"))); // NOI18N
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnTambahActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTambahActionPerformed
        pnTambah.setVisible(true);
    }//GEN-LAST:event_btnTambahActionPerformed

    private void btnBarangRusakActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBarangRusakActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnBarangRusakActionPerformed

    private void btnUbahActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUbahActionPerformed
int row = tblData.getSelectedRow();
if (row != -1) {
    // Tampilkan panel input
    pnUbah.setVisible(true);

    // Ambil data dari tabel dan isi ke form input
    String idProduk = tblData.getValueAt(row, 0).toString(); // kolom ID
    String namaProduk = tblData.getValueAt(row, 1).toString(); // kolom nama produk

    // Isi ke form input
    txtNamaproduk1.setText(namaProduk);

    // Simpan idProduk ke variabel global agar bisa digunakan saat update
    this.selectedIdProduk = idProduk;

} else {
    JOptionPane.showMessageDialog(null, "Pilih dahulu data yang ingin diubah.");
}


    }//GEN-LAST:event_btnUbahActionPerformed

    private void btnBarcodeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBarcodeActionPerformed
        
     int row = tblData.getSelectedRow();
        if (row != -1) {
        pnTambahBarcode.setVisible(true);
        }

   
    }//GEN-LAST:event_btnBarcodeActionPerformed

    private void btnHapusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnHapusActionPerformed
int row = tblData.getSelectedRow();
if (row != -1) {
    String idProduk = tblData.getValueAt(row, 0).toString();

    int confirm = JOptionPane.showConfirmDialog(null, "Yakin ingin menghapus produk ini?", "Konfirmasi Hapus", JOptionPane.YES_NO_OPTION);
    if (confirm == JOptionPane.YES_OPTION) {
        try {
            Connection conn = dbtokko.configDB();
            conn.setAutoCommit(false); // Mulai transaksi

            // Jika database kamu sudah pakai ON DELETE CASCADE di FK, ini cukup
            String sql = "DELETE FROM produk WHERE id_produk = ?";
            PreparedStatement stmt = conn.prepareStatement(sql);
            stmt.setString(1, idProduk);

            int rowsAffected = stmt.executeUpdate();
            conn.commit(); // Komit transaksi

            if (rowsAffected > 0) {
                JOptionPane.showMessageDialog(null, "Data berhasil dihapus.");
                loadDataProduk();
            } else {
                JOptionPane.showMessageDialog(null, "Data gagal dihapus.");
            }

            stmt.close();
            conn.close();
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, "Error saat menghapus: " + e.getMessage());
        }
    }
} else {
    JOptionPane.showMessageDialog(null, "Pilih dahulu data yang ingin dihapus.");
}

    }//GEN-LAST:event_btnHapusActionPerformed

    private void btnHapusMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnHapusMouseClicked
   int baris = tblData.getSelectedRow();

    if (baris >= 0) {
        String idProduk = tblData.getValueAt(baris, 0).toString(); // Ambil ID produk dari kolom pertama

        int konfirmasi = JOptionPane.showConfirmDialog(
            null,
            "Yakin ingin menghapus produk dengan ID: " + idProduk + " beserta semua data yang terkait?",
            "Konfirmasi Hapus Produk",
            JOptionPane.YES_NO_OPTION
        );

        if (konfirmasi == JOptionPane.YES_OPTION) {
            try {
                Connection conn = dbtokko.configDB();

                // Hapus dari detail_pembelian
                String sqlHapusDetailPembelian = "DELETE FROM detail_pembelian WHERE id_produk = ?";
                PreparedStatement pst1 = conn.prepareStatement(sqlHapusDetailPembelian);
                pst1.setString(1, idProduk);
                pst1.executeUpdate();
                pst1.close();

                // Hapus dari detail_penjualan
                String sqlHapusDetailPenjualan = "DELETE FROM detail_penjualan WHERE id_produk = ?";
                PreparedStatement pst2 = conn.prepareStatement(sqlHapusDetailPenjualan);
                pst2.setString(1, idProduk);
                pst2.executeUpdate();
                pst2.close();

                // Jika ada foreign key langsung dari penjualan ke produk (biasanya tidak), hapus juga:
                String sqlHapusPenjualan = "DELETE FROM penjualan WHERE id_produk = ?";
                try {
                    PreparedStatement pst3 = conn.prepareStatement(sqlHapusPenjualan);
                    pst3.setString(1, idProduk);
                    pst3.executeUpdate();
                    pst3.close();
                } catch (SQLException e) {
                    // Abaikan jika tidak ada FK dari penjualan ke produk (wajar)
                }

                // Hapus dari tabel utama produk
                String sqlHapusProduk = "DELETE FROM produk WHERE id_produk = ?";
                PreparedStatement pst4 = conn.prepareStatement(sqlHapusProduk);
                pst4.setString(1, idProduk);
                int affected = pst4.executeUpdate();
                pst4.close();

                if (affected > 0) {
                    JOptionPane.showMessageDialog(null, "Produk dan semua relasinya berhasil dihapus.");
                    // TODO: refreshTable(); jika ada tabel yang perlu disegarkan
                } else {
                    JOptionPane.showMessageDialog(null, "Produk tidak ditemukan.");
                }

            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(null, "Gagal menghapus data: " + ex.getMessage());
            }
        } else {
            JOptionPane.showMessageDialog(null, "Penghapusan dibatalkan.");
        }
    } else {
        JOptionPane.showMessageDialog(null, "Pilih produk yang ingin dihapus terlebih dahulu.");
    }
    }//GEN-LAST:event_btnHapusMouseClicked

    private void txtNamaproduk1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNamaproduk1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNamaproduk1ActionPerformed

    private void btnBatal1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBatal1ActionPerformed
        pnUbah.setVisible(false);
    }//GEN-LAST:event_btnBatal1ActionPerformed

    private void btnSimpan2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSimpan2ActionPerformed
/// Validasi input
String namaProduk = txtNamaproduk1.getText().trim();

if (namaProduk.isEmpty()) {
    JOptionPane.showMessageDialog(null, "Nama produk tidak boleh kosong.");
    return;
}

// UPDATE ke database
String sqlUpdate = "UPDATE produk SET nama_produk = ? WHERE id_produk = ?";
try (
    Connection conn = dbtokko.configDB();
    PreparedStatement psUpdate = conn.prepareStatement(sqlUpdate);
) {
    psUpdate.setString(1, namaProduk);
    psUpdate.setString(2, selectedIdProduk); // ← gunakan ID yang sudah disimpan

    int updated = psUpdate.executeUpdate();
    if (updated > 0) {
        JOptionPane.showMessageDialog(null, "Data produk berhasil diubah.");

        // Kosongkan form
        txtNamaproduk1.setText("");

        // Sembunyikan panel
        pnUbah.setVisible(false);

        // Refresh tabel
        loadDataProduk(); // ← Buat method untuk ambil ulang data produk
    } else {
        JOptionPane.showMessageDialog(null, "Data gagal diubah.");
    }
} catch (SQLException e) {
    e.printStackTrace();
    JOptionPane.showMessageDialog(null, "Gagal menyimpan data: " + e.getMessage());
}

    }//GEN-LAST:event_btnSimpan2ActionPerformed

    private void pnUbahAncestorAdded(javax.swing.event.AncestorEvent evt) {//GEN-FIRST:event_pnUbahAncestorAdded
        // TODO add your handling code here:
    }//GEN-LAST:event_pnUbahAncestorAdded

    private void pnTambahAncestorAdded(javax.swing.event.AncestorEvent evt) {//GEN-FIRST:event_pnTambahAncestorAdded
        // TODO add your handling code here:
    }//GEN-LAST:event_pnTambahAncestorAdded

    private void btnSimpan1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSimpan1ActionPerformed
 String sqlGetLastId = "SELECT id_produk FROM produk ORDER BY id_produk DESC LIMIT 1";

// Query untuk memasukkan data produk baru
String sqlInsert = "INSERT INTO produk (id_produk, nama_produk) VALUES (?, ?)";

// ✅ [PERUBAHAN] → ambil juga kolom barcode agar tidak hilang di UI
String sqlSelectAll = "SELECT id_produk, nama_produk, barcode FROM produk";

try (
    // Membuka koneksi ke database dan menyiapkan statement
    Connection conn = dbtokko.configDB();
    PreparedStatement psGetLastId = conn.prepareStatement(sqlGetLastId);
    PreparedStatement psInsert = conn.prepareStatement(sqlInsert);
    PreparedStatement psSelectAll = conn.prepareStatement(sqlSelectAll);
) {
    // Validasi input kosong
    String namaProduk = txtNamaproduk.getText().trim();

    if (namaProduk.isEmpty()) {
        JOptionPane.showMessageDialog(null, "Nama produk tidak boleh kosong.");
        return;
    }

    // Generate ID Produk baru
    ResultSet rs = psGetLastId.executeQuery();
    String newId = "P001";

    if (rs.next()) {
        String lastId = rs.getString("id_produk");
        int number = Integer.parseInt(lastId.substring(1)) + 1;
        newId = String.format("P%03d", number);
    }

    // Simpan data produk baru ke database
    psInsert.setString(1, newId);
    psInsert.setString(2, namaProduk);
    psInsert.executeUpdate(); // Eksekusi insert

    // Tampilkan pesan sukses
    JOptionPane.showMessageDialog(null, "Data produk berhasil disimpan.");

    // Kosongkan form input setelah penyimpanan
    txtNamaproduk.setText("");

    // Ambil semua data produk dari database dan tampilkan di tabel
    ResultSet rsAll = psSelectAll.executeQuery();
    DefaultTableModel model = (DefaultTableModel) tblData.getModel();
    model.setRowCount(0); // Kosongkan tabel
    
    while (rsAll.next()) {
        String idProduk = rsAll.getString("id_produk");
        String nama = rsAll.getString("nama_produk");
        String barcode = rsAll.getString("barcode"); // ✅ Ambil juga barcode
        model.addRow(new Object[] {idProduk, nama, barcode}); // ✅ Tambahkan ke tabel
    }

} catch (SQLException e) {
    e.printStackTrace(); // Log kesalahan
    JOptionPane.showMessageDialog(null, "Gagal menyimpan data: " + e.getMessage());
}


    }//GEN-LAST:event_btnSimpan1ActionPerformed

    private void btnBatalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBatalActionPerformed
        pnTambah.setVisible(false);
    }//GEN-LAST:event_btnBatalActionPerformed

    private void txtNamaprodukActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNamaprodukActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNamaprodukActionPerformed

    private void outputBarcodeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_outputBarcodeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_outputBarcodeActionPerformed

    private void generateButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_generateButtonMouseClicked
        // TODO add your handling code here:
 try {
    // Generate 9 digit angka acak
    StringBuilder kode = new StringBuilder();
    for (int i = 0; i < 13; i++) {
        kode.append((int)(Math.random() * 10));
    }

    // Tampilkan ke JTextField
    outputBarcode.setText(kode.toString());

    // Generate barcode image (BitMatrix)
    BitMatrix matrix = new MultiFormatWriter().encode(
        kode.toString(), BarcodeFormat.CODE_128, 300, 100
    );

    // Buat BufferedImage dengan ruang tambahan untuk angka di bawah barcode
    int width = matrix.getWidth();
    int height = matrix.getHeight();
    BufferedImage image = new BufferedImage(width, height + 30, BufferedImage.TYPE_INT_RGB);
    Graphics2D g = image.createGraphics();

    // Background putih
    g.setColor(Color.WHITE);
    g.fillRect(0, 0, width, height + 30);

    // Gambar barcode
    g.setColor(Color.BLACK);
    for (int y = 0; y < height; y++) {
        for (int x = 0; x < width; x++) {
            if (matrix.get(x, y)) {
                g.fillRect(x, y, 1, 1);
            }
        }
    }

    // Tambahkan angka di bawah barcode
    g.setFont(new Font("Arial", Font.PLAIN, 20));
    FontMetrics fontMetrics = g.getFontMetrics();
    int textWidth = fontMetrics.stringWidth(kode.toString());
    int xText = (width - textWidth) / 2;
    int yText = height + 20;
    g.drawString(kode.toString(), xText, yText);
    g.dispose();

    // ✅ Tampilkan preview ke showPanelBarcode
    showPanelBarcode.removeAll(); // Bersihkan isi sebelumnya
    JLabel lbl = new JLabel(new ImageIcon(image.getScaledInstance(
        showPanelBarcode.getWidth(),
        showPanelBarcode.getHeight(),
        Image.SCALE_SMOOTH
    )));
    lbl.setHorizontalAlignment(JLabel.CENTER);
    lbl.setVerticalAlignment(JLabel.CENTER);
    showPanelBarcode.setLayout(new BorderLayout());
    showPanelBarcode.add(lbl, BorderLayout.CENTER);
    showPanelBarcode.revalidate();
    showPanelBarcode.repaint();

} catch (Exception ex) {
    ex.printStackTrace();
    JOptionPane.showMessageDialog(null,
        "Gagal membuat barcode", "Error", JOptionPane.ERROR_MESSAGE);
}




    }//GEN-LAST:event_generateButtonMouseClicked

    private void generateButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_generateButtonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_generateButtonActionPerformed

    private void btn_cetakActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_cetakActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btn_cetakActionPerformed

    private void btnBatal2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBatal2ActionPerformed
        pnTambahBarcode.setVisible(false);
    }//GEN-LAST:event_btnBatal2ActionPerformed

    private void btn_simpanBarcodeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_simpanBarcodeActionPerformed
        // TODO add your handling code here:
        
    }//GEN-LAST:event_btn_simpanBarcodeActionPerformed

    private void btn_simpanBarcodeMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btn_simpanBarcodeMouseClicked
        // TODO add your handling code here:
 String barcode = outputBarcode.getText().trim();

if (barcode.isEmpty()) {
    JOptionPane.showMessageDialog(null, "Barcode tidak boleh kosong.");
    return;
}

// Ambil baris yang dipilih di JTable
int row = tblData.getSelectedRow();

if (row == -1) {
    JOptionPane.showMessageDialog(null, "Pilih data produk terlebih dahulu di tabel.");
    return;
}

// Ambil ID produk dari kolom pertama tabel (asumsinya kolom 0 = id_produk)
String idProduk = tblData.getValueAt(row, 0).toString();

// Update barcode ke database
String sqlUpdate = "UPDATE produk SET barcode = ? WHERE id_produk = ?";

try (
    Connection conn = dbtokko.configDB();
    PreparedStatement ps = conn.prepareStatement(sqlUpdate);
) {
    ps.setString(1, barcode);
    ps.setString(2, idProduk);

    int result = ps.executeUpdate();

    if (result > 0) {
        JOptionPane.showMessageDialog(null, "Barcode berhasil disimpan.");
        outputBarcode.setText("");
        pnTambahBarcode.setVisible(false);
        // Bersihkan panel barcode setelah simpan
        showPanelBarcode.removeAll();
        showPanelBarcode.revalidate();
        showPanelBarcode.repaint();

        loadDataProduk();
    } else {
        JOptionPane.showMessageDialog(null, "Gagal menyimpan barcode.");
    }

} catch (SQLException e) {
    e.printStackTrace();
    JOptionPane.showMessageDialog(null, "Terjadi kesalahan: " + e.getMessage());
}

    }//GEN-LAST:event_btn_simpanBarcodeMouseClicked

    private void btn_cetakMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btn_cetakMouseClicked
        // TODO add your handling code here:
        btn_cetak.addActionListener(e -> {
    try {
        String kode = outputBarcode.getText();
        if (kode == null || kode.isEmpty()) {
            JOptionPane.showMessageDialog(null, "Barcode belum dibuat!", "Peringatan", JOptionPane.WARNING_MESSAGE);
            return;
        }

        // Generate barcode BitMatrix
        BitMatrix matrix = new MultiFormatWriter().encode(
            kode, BarcodeFormat.CODE_128, 300, 100
        );

        // Buat BufferedImage dengan angka di bawah
        int width = matrix.getWidth();
        int height = matrix.getHeight();
        BufferedImage image = new BufferedImage(width, height + 30, BufferedImage.TYPE_INT_RGB);
        Graphics2D g = image.createGraphics();

        // Background putih
        g.setColor(Color.WHITE);
        g.fillRect(0, 0, width, height + 30);

        // Gambar barcode
        g.setColor(Color.BLACK);
        for (int y = 0; y < height; y++) {
            for (int x = 0; x < width; x++) {
                if (matrix.get(x, y)) {
                    g.fillRect(x, y, 1, 1);
                }
            }
        }

        // Gambar kode angka di bawah barcode
        g.setFont(new Font("Arial", Font.PLAIN, 20));
        FontMetrics fontMetrics = g.getFontMetrics();
        int textWidth = fontMetrics.stringWidth(kode);
        int xText = (width - textWidth) / 2;
        int yText = height + 20;
        g.drawString(kode, xText, yText);
        g.dispose();

        // ✅ Simpan ke folder lokal
        String folder = "barcodes/";
        File folderDir = new File(folder);
        if (!folderDir.exists()) {
            folderDir.mkdirs();
        }

        File outputFile = new File(folder + kode + ".png");
        ImageIO.write(image, "PNG", outputFile);

        // ✅ Cetak barcode
        PrinterJob job = PrinterJob.getPrinterJob();
        job.setJobName("Cetak Barcode");

        job.setPrintable((graphics, pageFormat, pageIndex) -> {
            if (pageIndex > 0) return Printable.NO_SUCH_PAGE;

            Graphics2D g2d = (Graphics2D) graphics;
            g2d.translate(pageFormat.getImageableX(), pageFormat.getImageableY());

            // Gambar barcode ke halaman cetak
            g2d.drawImage(image, 100, 100, null);
            return Printable.PAGE_EXISTS;
        });

        boolean doPrint = job.printDialog(); // Tampilkan dialog printer
        if (doPrint) {
            job.print();
        }

    } catch (Exception ex) {
        ex.printStackTrace();
        JOptionPane.showMessageDialog(null,
            "Gagal mencetak barcode", "Error", JOptionPane.ERROR_MESSAGE);
    }
});

    }//GEN-LAST:event_btn_cetakMouseClicked

    private void btnSimpan1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnSimpan1MouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_btnSimpan1MouseClicked

    private void btnBarangRusakMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnBarangRusakMouseClicked
        // TODO add your handling code here:
        pnl_barangrusak.setVisible(true);
    }//GEN-LAST:event_btnBarangRusakMouseClicked

    private void btn_rusakActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_rusakActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btn_rusakActionPerformed

    private void jButton3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton3MouseClicked
        // TODO add your handling code here:
        pnl_barangrusak.setVisible(false);
    }//GEN-LAST:event_jButton3MouseClicked

    private void jtIdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtIdActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jtIdActionPerformed

    private void btnKembaliMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnKembaliMouseClicked
        // TODO add your handling code here:
        pnlRusak.setVisible(false);
    }//GEN-LAST:event_btnKembaliMouseClicked

    private void btnMasukMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnMasukMouseClicked
        // TODO add your handling code here:
btnMasuk.addActionListener(new ActionListener() {
    @Override
    public void actionPerformed(ActionEvent e) {
        Connection conn = null;

        try {
            String idProduk = jtId.getText().trim();
            String alasan = jtAlasan.getSelectedItem().toString();
            java.util.Date tanggalRusakUtil = jCalenderMasok.getDate();
            int jumlahRusak = (int) SpnJumlah.getValue();

            if (idProduk.isEmpty() || tanggalRusakUtil == null || jumlahRusak <= 0) {
                JOptionPane.showMessageDialog(null, "Lengkapi semua data terlebih dahulu.");
                return;
            }

            java.sql.Date tanggalRusakSQL = new java.sql.Date(tanggalRusakUtil.getTime());
            conn = dbtokko.configDB();
            conn.setAutoCommit(false);

            // Validasi id_produk ada di produk
            String cekProduk = "SELECT id_produk FROM produk WHERE id_produk = ?";
            PreparedStatement psCek = conn.prepareStatement(cekProduk);
            psCek.setString(1, idProduk);
            ResultSet rsProduk = psCek.executeQuery();
            if (!rsProduk.next()) {
                JOptionPane.showMessageDialog(null, "ID Produk tidak ditemukan di tabel produk.");
                conn.rollback();
                return;
            }

            // Cek stok
            String sqlCekStok = "SELECT stok FROM stok_produk WHERE id_produk = ?";
            PreparedStatement psStok = conn.prepareStatement(sqlCekStok);
            psStok.setString(1, idProduk);
            ResultSet rsStok = psStok.executeQuery();

            if (!rsStok.next()) {
                JOptionPane.showMessageDialog(null, "Produk tidak ditemukan di stok.");
                conn.rollback();
                return;
            }

            int stok = rsStok.getInt("stok");
            if (stok < jumlahRusak) {
                JOptionPane.showMessageDialog(null, "Stok tidak mencukupi. Stok tersedia: " + stok);
                conn.rollback();
                return;
            }

            // Insert ke barang_rusak
            String sqlInsert = "INSERT INTO barang_rusak (id_produk, alasan, tanggal_rusak, jumlah) VALUES (?, ?, ?, ?)";
            PreparedStatement psInsert = conn.prepareStatement(sqlInsert);
            psInsert.setString(1, idProduk);
            psInsert.setString(2, alasan);
            psInsert.setDate(3, tanggalRusakSQL);
            psInsert.setInt(4, jumlahRusak);

            int insertResult = psInsert.executeUpdate();
            System.out.println("INSERT RESULT: " + insertResult);

            if (insertResult == 0) {
                JOptionPane.showMessageDialog(null, "Gagal menyimpan ke tabel barang_rusak.");
                conn.rollback();
                return;
            }

            // Update stok
            String sqlUpdate = "UPDATE stok_produk SET stok = stok - ? WHERE id_produk = ?";
            PreparedStatement psUpdate = conn.prepareStatement(sqlUpdate);
            psUpdate.setInt(1, jumlahRusak);
            psUpdate.setString(2, idProduk);
            int updateResult = psUpdate.executeUpdate();

            if (updateResult == 0) {
                JOptionPane.showMessageDialog(null, "Gagal mengurangi stok.");
                conn.rollback();
                return;
            }

            // Commit semua
            conn.commit();
            JOptionPane.showMessageDialog(null, "Barang rusak berhasil dicatat & stok dikurangi.");
            pnlRusak.setVisible(false);

        } catch (Exception ex) {
            ex.printStackTrace();
            try {
                if (conn != null) conn.rollback();
            } catch (Exception rbEx) {
                rbEx.printStackTrace();
            }
            JOptionPane.showMessageDialog(null, "Terjadi kesalahan: " + ex.getMessage());
        } finally {
            try {
                if (conn != null) {
                    conn.setAutoCommit(true);
                    conn.close();
                }
            } catch (Exception ex) {
                ex.printStackTrace();
            }
        }
    }
});

    }//GEN-LAST:event_btnMasukMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Menambah_Stok1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Menambah_Stok1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Menambah_Stok1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Menambah_Stok1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Menambah_Stok1().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JSpinner SpnJumlah;
    private javax.swing.JButton btnBarangRusak;
    private javax.swing.JButton btnBarcode;
    private javax.swing.JButton btnBatal;
    private javax.swing.JButton btnBatal1;
    private javax.swing.JButton btnBatal2;
    private javax.swing.JButton btnHapus;
    private javax.swing.JButton btnKembali;
    private javax.swing.JButton btnMasuk;
    private javax.swing.JButton btnSimpan1;
    private javax.swing.JButton btnSimpan2;
    private javax.swing.JButton btnTambah;
    private javax.swing.JButton btnUbah;
    private javax.swing.JButton btn_cetak;
    private javax.swing.JButton btn_rusak;
    private javax.swing.JButton btn_simpanBarcode;
    private javax.swing.JTable dataStok;
    private javax.swing.JButton generateButton;
    private javax.swing.JButton jButton3;
    private de.wannawork.jcalendar.JCalendarComboBox jCalenderMasok;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JComboBox<String> jtAlasan;
    private javax.swing.JTextField jtId;
    private javax.swing.JTextField outputBarcode;
    private javax.swing.JPanel pnTambah;
    private javax.swing.JPanel pnTambahBarcode;
    private javax.swing.JPanel pnUbah;
    private javax.swing.JPanel pnlRusak;
    private javax.swing.JPanel pnl_barangrusak;
    private javax.swing.JPanel showPanelBarcode;
    private javax.swing.JTable tblData;
    private javax.swing.JTextField txtNamaproduk;
    private javax.swing.JTextField txtNamaproduk1;
    // End of variables declaration//GEN-END:variables
private void loadDataProduk() {
    String sql = "SELECT p.id_produk, p.nama_produk, p.barcode, IFNULL(sp.stok, 0) AS jumlah_stok " +
                 "FROM produk p " +
                 "LEFT JOIN stok_produk sp ON p.id_produk = sp.id_produk";

    try (
        Connection conn = dbtokko.configDB();
        PreparedStatement ps = conn.prepareStatement(sql);
        ResultSet rs = ps.executeQuery();
    ) {
        DefaultTableModel model = new DefaultTableModel(
            new Object[]{"ID Produk", "Nama Produk", "Barcode", "Stok"}, 0
        );
        tblData.setModel(model);

        while (rs.next()) {
            String idProduk = rs.getString("id_produk");
            String namaProduk = rs.getString("nama_produk");
            String barcode = rs.getString("barcode");
            int stok = rs.getInt("jumlah_stok");

            model.addRow(new Object[]{idProduk, namaProduk, barcode, stok});
        }

    } catch (SQLException e) {
        e.printStackTrace();
        JOptionPane.showMessageDialog(null, "Gagal menampilkan data produk: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
    }
}



public void tampilkanStokProduk(String idProduk) {
    DefaultTableModel model = new DefaultTableModel();
    model.addColumn("ID Produk");
    model.addColumn("ID Stok");
    model.addColumn("Stok");
    model.addColumn("Harga Beli");
    model.addColumn("Harga Jual");
    model.addColumn("Tanggal Kedaluwarsa");

    String sql = "SELECT id_produk, id_stok, stok, harga_beli, harga_jual, tanggal_kedaluwarsa " +
                 "FROM stok_produk WHERE id_produk = ?";

    try {
        Connection conn = dbtokko.configDB();
        PreparedStatement ps = conn.prepareStatement(sql);
        ps.setString(1, idProduk); // gunakan setString
        ResultSet rs = ps.executeQuery();

        while (rs.next()) {
            model.addRow(new Object[]{
                rs.getString("id_produk"),
                rs.getString("id_stok"),
                rs.getInt("stok"),
                rs.getDouble("harga_beli"),
                rs.getDouble("harga_jual"),
                rs.getDate("tanggal_kedaluwarsa")
            });
        }

        dataStok.setModel(model); // pastikan tblStokProduk dideklarasikan di GUI Anda

    } catch (SQLException e) {
        JOptionPane.showMessageDialog(null, "Gagal menampilkan stok produk: " + e.getMessage());
    }
}



}


   

   
  

