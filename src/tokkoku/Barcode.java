/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package tokkoku;
import com.barcodelib.barcode.Linear;
import database.dbtokko;
import java.awt.Color;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.awt.event.MouseMotionAdapter;
import java.awt.event.MouseMotionListener;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import javax.swing.BorderFactory;
import javax.swing.JButton;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JTextField;
import javax.swing.Timer;
import com.google.zxing.BarcodeFormat;
import com.google.zxing.Writer;
import com.google.zxing.client.j2se.MatrixToImageWriter;
import com.google.zxing.common.BitMatrix;
import com.google.zxing.oned.EAN13Writer;
import java.awt.Image;
import java.awt.image.BufferedImage;
import java.io.File;
import java.io.FileOutputStream;
import java.io.OutputStream;
import java.nio.file.Path;
import java.nio.file.Paths;
import java.util.Random;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;

/**
 *
 * @author Yiung Za
 */
public class Barcode extends javax.swing.JFrame {
            private int x = 210;
            JPanel activePanel = null;
    private void addHoverEffects() {
        panelDashboard.addMouseListener(createHoverEffect(panelDashboard));
        panelDashboard.addMouseMotionListener(createMotionListener(panelDashboard));

        panelTransaksi.addMouseListener(createHoverEffect(panelTransaksi));
        panelTransaksi.addMouseMotionListener(createMotionListener(panelTransaksi));
    }

    private MouseAdapter createHoverEffect(JPanel panel) {
        return new MouseAdapter() {
            @Override
            public void mouseEntered(MouseEvent e) {
                System.out.println("Mouse masuk ke: " + panel.getName());

                // Reset efek dari panel sebelumnya
                if (activePanel != null && activePanel != panel) {
                    activePanel.setOpaque(false);
                    activePanel.setBackground(new Color(0, 0, 0, 0));
                    activePanel.revalidate();
                    activePanel.repaint();
                }

                // Atur panel aktif sekarang
                activePanel = panel;
                panel.setOpaque(true);
                panel.setBackground(new Color(128, 128, 128, 180));
                panel.revalidate();
                panel.repaint();
            }

            @Override
            public void mouseExited(MouseEvent e) {
                if (panel.getBounds().contains(e.getPoint())) {
                    return;
                }

                System.out.println("Mouse keluar dari: " + panel.getName());

                panel.setOpaque(false);
                panel.setBackground(new Color(0, 0, 0, 0));
                panel.revalidate();
                panel.repaint();
                activePanel = null;
            }
        };
    }

    private MouseMotionListener createMotionListener(JPanel panel) {
        return new MouseMotionAdapter() {
            @Override
            public void mouseMoved(MouseEvent e) {
                if (!panel.getBounds().contains(e.getPoint())) {
                    panel.setOpaque(false);
                    panel.setBackground(new Color(0, 0, 0, 0));
                    panel.revalidate();
                    panel.repaint();
                    activePanel = null;
                }
            }
        };
    }
    private JTextField txtBarcode;
    private JButton btnGenerate;
    
    /**
     * Creates new form dbAdmin
     */
    public Barcode() {
        initComponents();
        panelDashboard.setBackground(new java.awt.Color(255, 255, 255, 0));
        panelTransaksi.setBackground(new java.awt.Color(255, 255, 255, 0));
        panelKategori.setBackground(new java.awt.Color(255, 255, 255, 0));
        panelStok.setBackground(new java.awt.Color(255, 255, 255, 0));
        panelLaporan.setBackground(new java.awt.Color(255, 255, 255, 0));
        panelBarcode.setBackground(new java.awt.Color(255, 255, 255, 0));
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        sidebar = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        panelLaporan = new javax.swing.JPanel();
        Llaporan = new javax.swing.JLabel();
        iconLaporan = new javax.swing.JLabel();
        panelDashboard = new javax.swing.JPanel();
        iconDb = new javax.swing.JLabel();
        Ldashboard = new javax.swing.JLabel();
        panelTransaksi = new javax.swing.JPanel();
        Ltransaksi = new javax.swing.JLabel();
        iconTransaksi = new javax.swing.JLabel();
        panelKategori = new javax.swing.JPanel();
        Lkategori = new javax.swing.JLabel();
        iconKategori = new javax.swing.JLabel();
        panelStok = new javax.swing.JPanel();
        Lstok = new javax.swing.JLabel();
        iconStok = new javax.swing.JLabel();
        panelBarcode = new javax.swing.JPanel();
        Lbarcode = new javax.swing.JLabel();
        iconBarcode = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        iconStok1 = new javax.swing.JLabel();
        iconLaporan1 = new javax.swing.JLabel();
        iconTransaksi1 = new javax.swing.JLabel();
        iconDb1 = new javax.swing.JLabel();
        iconKategori1 = new javax.swing.JLabel();
        iconBarcode1 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        textInvoice = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        generate = new javax.swing.JToggleButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setSize(new java.awt.Dimension(0, 0));
        addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                formMouseEntered(evt);
            }
        });
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        sidebar.setBackground(new java.awt.Color(255, 255, 255));
        sidebar.setForeground(new java.awt.Color(4, 24, 61));
        sidebar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                sidebarMouseClicked(evt);
            }
        });
        sidebar.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/asset/hamburger.png"))); // NOI18N
        jLabel2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel2MouseClicked(evt);
            }
        });
        sidebar.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 110, 70, 70));

        jLabel4.setBackground(new java.awt.Color(0, 0, 153));
        jLabel4.setFont(new java.awt.Font("Dialog", 1, 48)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(0, 0, 153));
        jLabel4.setText("Tokko KU");
        sidebar.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 20, 230, 70));

        panelLaporan.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                panelLaporanMouseEntered(evt);
            }
        });
        panelLaporan.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        Llaporan.setFont(new java.awt.Font("Dialog", 0, 23)); // NOI18N
        Llaporan.setText("Laporan");
        Llaporan.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                LlaporanMouseEntered(evt);
            }
        });
        panelLaporan.add(Llaporan, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 0, 140, 40));

        iconLaporan.setIcon(new javax.swing.ImageIcon(getClass().getResource("/asset/report.png"))); // NOI18N
        panelLaporan.add(iconLaporan, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 0, 40, 40));

        sidebar.add(panelLaporan, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 540, 240, 40));

        panelDashboard.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                panelDashboardMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                panelDashboardMouseEntered(evt);
            }
        });
        panelDashboard.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        iconDb.setIcon(new javax.swing.ImageIcon(getClass().getResource("/asset/dashboard.png"))); // NOI18N
        panelDashboard.add(iconDb, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 0, 40, 40));

        Ldashboard.setFont(new java.awt.Font("Dialog", 0, 23)); // NOI18N
        Ldashboard.setText("Dashboard");
        panelDashboard.add(Ldashboard, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 10, 140, 20));

        sidebar.add(panelDashboard, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 200, 240, -1));

        panelTransaksi.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                panelTransaksiMouseEntered(evt);
            }
        });
        panelTransaksi.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        Ltransaksi.setFont(new java.awt.Font("Dialog", 0, 23)); // NOI18N
        Ltransaksi.setText("Transaksi");
        Ltransaksi.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                LtransaksiMouseEntered(evt);
            }
        });
        panelTransaksi.add(Ltransaksi, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 10, 140, 20));

        iconTransaksi.setIcon(new javax.swing.ImageIcon(getClass().getResource("/asset/transaction-history (1).png"))); // NOI18N
        panelTransaksi.add(iconTransaksi, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 0, 40, 40));

        sidebar.add(panelTransaksi, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 270, 240, 40));

        panelKategori.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                panelKategoriMouseEntered(evt);
            }
        });
        panelKategori.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        Lkategori.setFont(new java.awt.Font("Dialog", 0, 23)); // NOI18N
        Lkategori.setText("Kategori");
        Lkategori.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                LkategoriMouseEntered(evt);
            }
        });
        panelKategori.add(Lkategori, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 0, 140, 40));

        iconKategori.setIcon(new javax.swing.ImageIcon(getClass().getResource("/asset/categorization (1).png"))); // NOI18N
        panelKategori.add(iconKategori, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 0, 40, 40));

        sidebar.add(panelKategori, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 340, 240, 40));

        panelStok.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                panelStokMouseEntered(evt);
            }
        });
        panelStok.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        Lstok.setFont(new java.awt.Font("Dialog", 0, 23)); // NOI18N
        Lstok.setText("Stok");
        Lstok.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                LstokMouseEntered(evt);
            }
        });
        panelStok.add(Lstok, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 0, 140, 40));

        iconStok.setIcon(new javax.swing.ImageIcon(getClass().getResource("/asset/product.png"))); // NOI18N
        panelStok.add(iconStok, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 0, 40, 40));

        sidebar.add(panelStok, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 410, 240, 40));

        panelBarcode.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                panelBarcodeMouseEntered(evt);
            }
        });
        panelBarcode.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        Lbarcode.setFont(new java.awt.Font("Dialog", 0, 23)); // NOI18N
        Lbarcode.setText("Barcode");
        Lbarcode.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                LbarcodeMouseEntered(evt);
            }
        });
        panelBarcode.add(Lbarcode, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 0, 140, 40));

        iconBarcode.setIcon(new javax.swing.ImageIcon(getClass().getResource("/asset/barcode-scan.png"))); // NOI18N
        panelBarcode.add(iconBarcode, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 0, 40, 40));

        sidebar.add(panelBarcode, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 480, 240, -1));

        getContentPane().add(sidebar, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 240, 780));

        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/asset/hamburger.png"))); // NOI18N
        jLabel3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel3MouseClicked(evt);
            }
        });
        jPanel1.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 110, 160, 70));

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        iconStok1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/asset/product.png"))); // NOI18N
        jPanel2.add(iconStok1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 410, 40, 40));

        iconLaporan1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/asset/report.png"))); // NOI18N
        jPanel2.add(iconLaporan1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 540, 40, 40));

        iconTransaksi1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/asset/transaction-history (1).png"))); // NOI18N
        jPanel2.add(iconTransaksi1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 270, 40, 40));

        iconDb1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/asset/dashboard.png"))); // NOI18N
        jPanel2.add(iconDb1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 200, 40, 40));

        iconKategori1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/asset/categorization (1).png"))); // NOI18N
        jPanel2.add(iconKategori1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 340, 40, 40));

        iconBarcode1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/asset/barcode-scan.png"))); // NOI18N
        jPanel2.add(iconBarcode1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 480, 40, 40));

        jPanel1.add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 60, 780));

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));
        jPanel3.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        textInvoice.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textInvoiceActionPerformed(evt);
            }
        });
        jPanel3.add(textInvoice, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 60, 270, 40));

        jLabel1.setBackground(new java.awt.Color(0, 0, 0));
        jLabel1.setFont(new java.awt.Font("Dialog", 0, 23)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 0, 0));
        jLabel1.setText("Code Barcode");
        jPanel3.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 60, -1, -1));

        generate.setText("Buat Barcode");
        generate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                generateActionPerformed(evt);
            }
        });
        jPanel3.add(generate, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 190, -1, -1));

        jPanel1.add(jPanel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 70, 480, 610));

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1010, 780));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jLabel2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel2MouseClicked
        // TODO add your handling code here:
if (x == 210) {
    Timer timer = new Timer(5, new ActionListener() {
        int width = 240;
        @Override
        public void actionPerformed(ActionEvent e) {
            if (width <= 0) { // Sidebar tetap menyisakan 50px
                ((Timer) e.getSource()).stop();
                x = 0;
                
            } else {
                width -= 10;
                sidebar.setSize(width, 780);
//                sidebar.setBorder(BorderFactory.createLineBorder(Color.BLACK, 2, true)); // Border melengkung
            }
        }
    });
    timer.start();
}
    }//GEN-LAST:event_jLabel2MouseClicked

    private void jLabel3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel3MouseClicked
        // TODO add your handling code here:
if (x == 0) { // Cek apakah sidebar dalam keadaan tertutup
    new Thread(() -> {
        try {
            for (int i = 0; i <= 240; i += 10) { // Tambah ukuran per 10 biar smooth
                Thread.sleep(5); // Delay biar animasi ga terlalu cepat
                sidebar.setSize(i, 780);
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Error: " + e.getMessage());
        }
    }).start();
    
    x = 210; // Ubah x ke 210 biar nanti bisa ditutup lagi
}

    }//GEN-LAST:event_jLabel3MouseClicked

    private void formMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMouseEntered
        // TODO add your handling code here:
    }//GEN-LAST:event_formMouseEntered

    private void panelDashboardMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_panelDashboardMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_panelDashboardMouseClicked

    private void panelDashboardMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_panelDashboardMouseEntered
        // TODO add your handling code here:
// Variabel global untuk menyimpan panel yang aktif


MouseAdapter hoverEffectDashboard = new MouseAdapter() {
    @Override
    public void mouseEntered(MouseEvent e) {
        // Reset panel sebelumnya biar nggak ada efek bayangan
        if (activePanel != null && activePanel != panelDashboard) {
            activePanel.setOpaque(false);
            panelDashboard.setBackground(new java.awt.Color(255, 255, 255, 0));
            activePanel.repaint();
        }

        // Atur panel aktif sekarang
        activePanel = panelDashboard;
        panelDashboard.setOpaque(true);
        panelDashboard.setBackground(new Color(128, 128, 128, 180));
        panelDashboard.repaint();
    }

    @Override
    public void mouseExited(MouseEvent e) {
        // Pastikan hanya menghilangkan efek jika mouse benar-benar keluar dari panelDashboard
        if (activePanel == panelDashboard && !panelDashboard.getBounds().contains(e.getPoint())) {
            panelDashboard.setOpaque(false);
            panelDashboard.setBackground(new java.awt.Color(255, 255, 255, 0));
            panelDashboard.repaint();
            activePanel = null; // Reset aktif panel
        }
    }
};

// Tambahkan listener ke `panelDashboard` dan `Ldashboard`
panelDashboard.addMouseListener(hoverEffectDashboard);
Ldashboard.addMouseListener(hoverEffectDashboard);
iconDb.addMouseListener(hoverEffectDashboard);
panelDashboard.addMouseListener(createHoverEffect(panelDashboard));
panelDashboard.addMouseMotionListener(createMotionListener(panelDashboard));

    }//GEN-LAST:event_panelDashboardMouseEntered

    private void panelLaporanMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_panelLaporanMouseEntered
        // TODO add your handling code here:
        MouseAdapter hoverEffectDashboard = new MouseAdapter() {
    @Override
    public void mouseEntered(MouseEvent e) {
        // Reset panel sebelumnya biar nggak ada efek bayangan
        if (activePanel != null && activePanel != panelLaporan) {
            activePanel.setOpaque(false);
            panelLaporan.setBackground(new java.awt.Color(255, 255, 255, 0));
            activePanel.repaint();
        }

        // Atur panel aktif sekarang
        activePanel = panelLaporan;
        panelLaporan.setOpaque(true);
        panelLaporan.setBackground(new Color(128, 128, 128, 180));
        panelLaporan.repaint();
    }

    @Override
    public void mouseExited(MouseEvent e) {
        // Pastikan hanya menghilangkan efek jika mouse benar-benar keluar dari panelDashboard
        if (activePanel == panelLaporan && !panelLaporan.getBounds().contains(e.getPoint())) {
            panelLaporan.setOpaque(false);
            panelLaporan.setBackground(new java.awt.Color(255, 255, 255, 0));
            panelLaporan.repaint();
            activePanel = null; // Reset aktif panel
        }
    }
};

// Tambahkan listener ke `panelDashboard` dan `Ldashboard`
panelLaporan.addMouseListener(hoverEffectDashboard);
Llaporan.addMouseListener(hoverEffectDashboard);
iconLaporan.addMouseListener(hoverEffectDashboard);
panelLaporan.addMouseListener(createHoverEffect(panelLaporan));
panelLaporan.addMouseMotionListener(createMotionListener(panelLaporan));

    }//GEN-LAST:event_panelLaporanMouseEntered

    private void LlaporanMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_LlaporanMouseEntered
        // TODO add your handling code here:
    }//GEN-LAST:event_LlaporanMouseEntered

    private void sidebarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_sidebarMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_sidebarMouseClicked

    private void LtransaksiMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_LtransaksiMouseEntered
        // TODO add your handling code here:
    }//GEN-LAST:event_LtransaksiMouseEntered

    private void panelTransaksiMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_panelTransaksiMouseEntered
MouseAdapter hoverEffectDashboard = new MouseAdapter() {
    @Override
    public void mouseEntered(MouseEvent e) {
        // Reset panel sebelumnya biar nggak ada efek bayangan
        if (activePanel != null && activePanel != panelTransaksi) {
            activePanel.setOpaque(false);
            panelTransaksi.setBackground(new java.awt.Color(255, 255, 255, 0));
            activePanel.repaint();
        }

        // Atur panel aktif sekarang
        activePanel = panelTransaksi;
        panelTransaksi.setOpaque(true);
        panelTransaksi.setBackground(new Color(128, 128, 128, 180));
        panelTransaksi.repaint();
    }

    @Override
    public void mouseExited(MouseEvent e) {
        // Pastikan hanya menghilangkan efek jika mouse benar-benar keluar dari panelDashboard
        if (activePanel == panelTransaksi && !panelTransaksi.getBounds().contains(e.getPoint())) {
            panelTransaksi.setOpaque(false);
            panelTransaksi.setBackground(new java.awt.Color(255, 255, 255, 0));
            panelTransaksi.repaint();
            activePanel = null; // Reset aktif panel
        }
    }
};

// Tambahkan listener ke `panelDashboard` dan `Ldashboard`
panelTransaksi.addMouseListener(hoverEffectDashboard);
Ltransaksi.addMouseListener(hoverEffectDashboard);
iconTransaksi.addMouseListener(hoverEffectDashboard);
panelTransaksi.addMouseListener(createHoverEffect(panelTransaksi));
panelTransaksi.addMouseMotionListener(createMotionListener(panelTransaksi));
        // TODO add your handling code here:
    }//GEN-LAST:event_panelTransaksiMouseEntered

    private void LkategoriMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_LkategoriMouseEntered

// TODO add your handling code here:
    }//GEN-LAST:event_LkategoriMouseEntered

    private void panelKategoriMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_panelKategoriMouseEntered
        // TODO add your handling code here:
MouseAdapter hoverEffectKategori = new MouseAdapter() {
    @Override
    public void mouseEntered(MouseEvent e) {
        // Reset panel sebelumnya biar nggak ada efek bayangan
        if (activePanel != null && activePanel != panelKategori) {
            activePanel.setOpaque(false);
            panelKategori.setBackground(new java.awt.Color(255, 255, 255, 0));
            activePanel.repaint();
        }

        // Atur panel aktif sekarang
        activePanel = panelKategori;
        panelKategori.setOpaque(true);
        panelKategori.setBackground(new Color(128, 128, 128, 180));
        panelKategori.repaint();
    }

    @Override
    public void mouseExited(MouseEvent e) {
        // Pastikan hanya menghilangkan efek jika mouse benar-benar keluar dari panelKategori
        if (activePanel == panelKategori && !panelKategori.getBounds().contains(e.getPoint())) {
            panelKategori.setOpaque(false);
            panelKategori.setBackground(new java.awt.Color(255, 255, 255, 0));
            panelKategori.repaint();
            activePanel = null; // Reset aktif panel
        }
    }
};

// Tambahkan listener ke `panelKategori` dan `Lkategori`
panelKategori.addMouseListener(hoverEffectKategori);
Lkategori.addMouseListener(hoverEffectKategori);
iconKategori.addMouseListener(hoverEffectKategori);
panelKategori.addMouseListener(createHoverEffect(panelKategori));
panelKategori.addMouseMotionListener(createMotionListener(panelKategori));
    }//GEN-LAST:event_panelKategoriMouseEntered

    private void LstokMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_LstokMouseEntered
        // TODO add your handling code here:
    }//GEN-LAST:event_LstokMouseEntered

    private void panelStokMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_panelStokMouseEntered
        // TODO add your handling code here:
MouseAdapter hoverEffectStok = new MouseAdapter() {
    @Override
    public void mouseEntered(MouseEvent e) {
        // Reset panel sebelumnya biar nggak ada efek bayangan
        if (activePanel != null && activePanel != panelStok) {
            activePanel.setOpaque(false);
            panelStok.setBackground(new java.awt.Color(255, 255, 255, 0));
            activePanel.repaint();
        }

        // Atur panel aktif sekarang
        activePanel = panelStok;
        panelStok.setOpaque(true);
        panelStok.setBackground(new Color(128, 128, 128, 180));
        panelStok.repaint();
    }

    @Override
    public void mouseExited(MouseEvent e) {
        // Pastikan hanya menghilangkan efek jika mouse benar-benar keluar dari panelStok
        if (activePanel == panelStok && !panelStok.getBounds().contains(e.getPoint())) {
            panelStok.setOpaque(false);
            panelStok.setBackground(new java.awt.Color(255, 255, 255, 0));
            panelStok.repaint();
            activePanel = null; // Reset aktif panel
        }
    }
};

// Tambahkan listener ke `panelStok` dan `Lstok`
panelStok.addMouseListener(hoverEffectStok);
Lstok.addMouseListener(hoverEffectStok);
iconStok.addMouseListener(hoverEffectStok);
panelStok.addMouseListener(createHoverEffect(panelStok));
panelStok.addMouseMotionListener(createMotionListener(panelStok));
    }//GEN-LAST:event_panelStokMouseEntered

    private void LbarcodeMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_LbarcodeMouseEntered
        // TODO add your handling code here:
        MouseAdapter hoverEffectStok = new MouseAdapter() {
    @Override
    public void mouseEntered(MouseEvent e) {
        // Reset panel sebelumnya biar nggak ada efek bayangan
        if (activePanel != null && activePanel != panelBarcode) {
            activePanel.setOpaque(false);
            panelBarcode.setBackground(new java.awt.Color(255, 255, 255, 0));
            activePanel.repaint();
        }

        // Atur panel aktif sekarang
        activePanel = panelBarcode;
        panelBarcode.setOpaque(true);
        panelBarcode.setBackground(new Color(128, 128, 128, 180));
        panelBarcode.repaint();
    }

    @Override
    public void mouseExited(MouseEvent e) {
        // Pastikan hanya menghilangkan efek jika mouse benar-benar keluar dari panelStok
        if (activePanel == panelBarcode && !panelBarcode.getBounds().contains(e.getPoint())) {
            panelBarcode.setOpaque(false);
            panelBarcode.setBackground(new java.awt.Color(255, 255, 255, 0));
            panelBarcode.repaint();
            activePanel = null; // Reset aktif panel
        }
    }
};

// Tambahkan listener ke `panelStok` dan `Lstok`
panelBarcode.addMouseListener(hoverEffectStok);
Lbarcode.addMouseListener(hoverEffectStok);
iconBarcode.addMouseListener(hoverEffectStok);
panelBarcode.addMouseListener(createHoverEffect(panelBarcode));
panelBarcode.addMouseMotionListener(createMotionListener(panelBarcode));
    }//GEN-LAST:event_LbarcodeMouseEntered

    private void panelBarcodeMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_panelBarcodeMouseEntered
        // TODO add your handling code here:
        
    }//GEN-LAST:event_panelBarcodeMouseEntered

    private void textInvoiceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textInvoiceActionPerformed
        // TODO add your handling code here:
        
    }//GEN-LAST:event_textInvoiceActionPerformed

    private void generateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_generateActionPerformed
        // TODO add your handling code here:
try {
    // Generate 13 digit angka acak
    Random rand = new Random();
    StringBuilder barcodeNumber = new StringBuilder();
    for (int i = 0; i < 13; i++) {
        barcodeNumber.append(rand.nextInt(10)); // Angka 0-9
    }

    // Set ke text field
    textInvoice.setText(barcodeNumber.toString());

    // Buat barcode
    Linear barcode = new Linear();
    barcode.setType(Linear.CODE128);
    barcode.setData(barcodeNumber.toString());
    barcode.setI(11.0f);
    barcode.renderBarcode("F:/" + barcodeNumber + ".png");

    System.out.println("Barcode berhasil dibuat: " + barcodeNumber);
   JOptionPane.showMessageDialog(null, "Barcode berhasil dicetak " + barcodeNumber);
} catch (Exception e) {
    JOptionPane.showMessageDialog(null, "Gagal mencetak barcode: " + e);
}
    }//GEN-LAST:event_generateActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Barcode.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Barcode.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Barcode.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Barcode.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Barcode().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel Lbarcode;
    private javax.swing.JLabel Ldashboard;
    private javax.swing.JLabel Lkategori;
    private javax.swing.JLabel Llaporan;
    private javax.swing.JLabel Lstok;
    private javax.swing.JLabel Ltransaksi;
    private javax.swing.JToggleButton generate;
    private javax.swing.JLabel iconBarcode;
    private javax.swing.JLabel iconBarcode1;
    private javax.swing.JLabel iconDb;
    private javax.swing.JLabel iconDb1;
    private javax.swing.JLabel iconKategori;
    private javax.swing.JLabel iconKategori1;
    private javax.swing.JLabel iconLaporan;
    private javax.swing.JLabel iconLaporan1;
    private javax.swing.JLabel iconStok;
    private javax.swing.JLabel iconStok1;
    private javax.swing.JLabel iconTransaksi;
    private javax.swing.JLabel iconTransaksi1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel panelBarcode;
    private javax.swing.JPanel panelDashboard;
    private javax.swing.JPanel panelKategori;
    private javax.swing.JPanel panelLaporan;
    private javax.swing.JPanel panelStok;
    private javax.swing.JPanel panelTransaksi;
    private javax.swing.JPanel sidebar;
    private javax.swing.JTextField textInvoice;
    // End of variables declaration//GEN-END:variables


    private static class txtOutput {

        private static void setText(String barcodeText) {
            throw new UnsupportedOperationException("Not supported yet."); // Generated from nbfs://nbhost/SystemFileSystem/Templates/Classes/Code/GeneratedMethodBody
        }

        public txtOutput() {
        }
    }
}
